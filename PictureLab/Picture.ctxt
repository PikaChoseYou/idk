#BlueJ class context
comment0.params=
comment0.target=Picture()
comment0.text=\r\n\ Constructor\ that\ takes\ no\ arguments\ \r\n
comment1.params=fileName
comment1.target=Picture(java.lang.String)
comment1.text=\r\n\ Constructor\ that\ takes\ a\ file\ name\ and\ creates\ the\ picture\ \r\n\ @param\ fileName\ the\ name\ of\ the\ file\ to\ create\ the\ picture\ from\r\n
comment10.params=
comment10.target=void\ fixUnderwater()
comment10.text=Method\ that\ modifies\ pixel\ colors\ to\ make\ water\ easier\ to\ see\ through
comment11.params=
comment11.target=void\ mirrorVertical()
comment11.text=\ Method\ that\ mirrors\ the\ picture\ around\ a\ \r\n\ vertical\ mirror\ in\ the\ center\ of\ the\ picture\r\nfrom\ left\ to\ right
comment12.params=
comment12.target=void\ mirrorVerticalRightToLeft()
comment12.text=\ Method\ that\ mirrors\ the\ picture\ around\ a\ \r\nmirror\ placed\ vertically\ from\ right\ to\ left
comment13.params=
comment13.target=void\ mirrorHorizontal()
comment13.text=\ Method\ that\ mirrors\ the\ picture\ around\ a\ \r\n\ mirror\ placed\ horizontally\ at\ the\ middle\ of\r\nthe\ height\ of\ the\ picture\ from\ top\ to\ bottom
comment14.params=
comment14.target=void\ mirrorHorizontalBotToTop()
comment14.text=\ Method\ that\ mirrors\ the\ picture\ around\ a\ \r\n\ mirror\ placed\ horizontally\ at\ the\ middle\ of\r\nthe\ height\ of\ the\ picture\ from\ bottom\ to\ top
comment15.params=
comment15.target=void\ mirrorDiagonal()
comment15.text=\ Method\ that\ mirrors\ a\ square\ part\ of\ a\ picture\ \r\n\ from\ bottom\ left\ to\ top\ right\ around\ a\ mirror\ placed\r\non\ the\ diagonal\ line\ where\ the\ row\ index\ \=\ column\ index
comment16.params=
comment16.target=void\ mirrorTemple()
comment16.text=Mirror\ just\ part\ of\ a\ picture\ of\ a\ temple
comment17.params=
comment17.target=void\ mirrorArms()
comment17.text=\ Mirror\ just\ part\ of\ a\ picture\ of\ a\ snowman\r\nto\ have\ the\ snowman\ have\ 4\ arms
comment18.params=
comment18.target=void\ mirrorGull()
comment18.text=\ Mirror\ just\ part\ of\ a\ picture\ of\ a\ beach\ to\ have\ 2\ seagulls\r\ninstead\ of\ just\ one\ in\ the\ picture
comment19.params=fromPic\ startRow\ startCol
comment19.target=void\ copy(Picture,\ int,\ int)
comment19.text=\ copy\ from\ the\ passed\ fromPic\ to\ the\r\n\ specified\ startRow\ and\ startCol\ in\ the\r\n\ current\ picture\r\n\ @param\ fromPic\ the\ picture\ to\ copy\ from\r\n\ @param\ startRow\ the\ start\ row\ to\ copy\ to\r\n\ @param\ startCol\ the\ start\ col\ to\ copy\ to\r\n
comment2.params=height\ width
comment2.target=Picture(int,\ int)
comment2.text=\r\n\ Constructor\ that\ takes\ the\ width\ and\ height\r\n\ @param\ height\ the\ height\ of\ the\ desired\ picture\r\n\ @param\ width\ the\ width\ of\ the\ desired\ picture\r\n
comment20.params=fromPic\ fromStartRow\ fromEndRow\ fromStartCol\ fromEndCol\ startRow\ startCol
comment20.target=void\ copy(Picture,\ int,\ int,\ int,\ int,\ int,\ int)
comment20.text=\ copy\ from\ the\ passed\ fromPic\ of\ specified\r\n\ startRow,\ endRow,\ startCol\ and\ endCol\ to\ the\r\n\ specified\ startRow\ and\ startCol\ in\ the\r\n\ current\ picture\r\n\ @param\ fromPic\ the\ picture\ to\ copy\ from\r\n\ @param\ fromStartRow\ the\ picture\ start\ row\ to\ copy\ from\r\n\ @param\ fromEndRow\ the\ picture\ end\ row\ to\ copy\ from\r\n\ @param\ fromStartCol\ the\ picture\ start\ col\ to\ copy\ from\r\n\ @param\ fromEndCol\ the\ picture\ end\ col\ to\ copy\ from\r\n\ @param\ startRow\ the\ start\ row\ to\ copy\ to\r\n\ @param\ startCol\ the\ start\ col\ to\ copy\ to\r\n
comment21.params=
comment21.target=void\ myCollage()
comment21.text=\ Method\ to\ create\ a\ collage\ of\ several\ pictures\r\n\ has\ 3\ pictures\ with\ 3\ different\ picture\ manipulations\r\nand\ at\ least\ one\ mirroring
comment22.params=edgeDist
comment22.target=void\ edgeDetection(int)
comment22.text=\ Method\ to\ show\ large\ changes\ in\ color\ \r\n\ @param\ edgeDist\ the\ distance\ for\ finding\ edges\r\n
comment23.params=args
comment23.target=void\ main(java.lang.String[])
comment23.text=Main\ method\ for\ testing\ -\ each\ class\ in\ Java\ can\ have\ a\ main\ \r\n\ method\ \r\n
comment3.params=copyPicture
comment3.target=Picture(Picture)
comment3.text=\r\n\ Constructor\ that\ takes\ a\ picture\ and\ creates\ a\ \r\n\ copy\ of\ that\ picture\r\n\ @param\ copyPicture\ the\ picture\ to\ copy\r\n
comment4.params=image
comment4.target=Picture(java.awt.image.BufferedImage)
comment4.text=\r\n\ Constructor\ that\ takes\ a\ buffered\ image\r\n\ @param\ image\ the\ buffered\ image\ to\ use\r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ Method\ to\ return\ a\ string\ with\ information\ about\ this\ picture.\r\n\ @return\ a\ string\ with\ information\ about\ the\ picture\ such\ as\ fileName,\r\n\ height\ and\ width.\r\n
comment6.params=
comment6.target=void\ zeroBlue()
comment6.text=Method\ to\ set\ the\ blue\ to\ 0
comment7.params=
comment7.target=void\ keepOnlyBlue()
comment7.text=Method\ that\ keeps\ only\ the\ blue\ values,\ \r\nsetting\ all\ red\ and\ green\ values\ to\ 0
comment8.params=
comment8.target=void\ negate()
comment8.text=Method\ that\ negates\ all\ the\ pixels\r\n\ in\ the\ picture.\ (Setting\ all\ values\ \r\nto\ 255\ -\ current\ color.
comment9.params=
comment9.target=void\ grayscale()
comment9.text=Method\ that\ turns\ the\ picture\ into\ shades\ of\ gray
numComments=24
